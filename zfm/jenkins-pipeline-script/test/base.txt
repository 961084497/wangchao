if (ACTIONS == "ddddd"){
       stage("开始了"){
        sh "echo \"##############编译开始############\""
        sh "echo $ACTIONS"
        println ACTIONS  ###直接获取前端页面的值  但是全部要大些   或者写成 "${env.actions} 但是这里的actions要个你这前端页面那个传来
        println a_name
        println "env.gitRepo:${GITREPO}"  #########  前端页面传来的  直接用全部大写  或者用env.小写 都是可以的
        println "env.gittag:${GITTAG}" 
        println "env.packageName:${PACKAGENAME}"
        println "env.rollback:${ROLLBACK}"
        println "env.actions:${ACTIONS}"
        println "env.workspace:${env.WORKSPACE}"  ########## jenkins 构建目录  相当于wangchao-test就是git clone的地址   /opt/jenkins_slave_01/workspace/TEST/edu/wangchao-test
        println "env.projectpath:${env.PROJECTPATH}"   ##########TEST/edu/wangchao-test   jenkins上面的相对项目地址
        }
      }


入口那一层
其实下面也是可以的


if (env.node == "huawei") {
	node() {
		}
}
else {
	node() {
		}
}



####### 还有jenkins 中 添加是谁构建的坐标  但是提前那个user build 插件要安装好

node('jenkins_slave_01') {
        wrap([$class: 'BuildUser']) {
            def user_user = env.BUILD_USER_ID
                println user_user
                        currentBuild.description = "Choice action is ####${user_user}###"
        }

build job:"HW-UAT/edu/saas-job/saas-job.war"  ##############  在stage里面添加这样 还可以继续编译下一个job
