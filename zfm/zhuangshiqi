#!/usr/bin/python
def log1(a):
	def log(func):
    		def wrapper(*args, **kw):
			print(a)
        		print('call %s():' % func.__name__)
        		return func(*args, **kw)
    		return wrapper
	return log

@log1("wangchao")   #### (1) now = log1("wangchao")    (2) now = log1("wangchao")(now)   其实这个时候log1("wangchao")就是上面的第一个返回值相当于wrapper
def now(a,b):
	print a+b
	print('2015-3-25')

now(3,4)


#  now = log1("wangchao")(now)


def log(func):
    def wrapper(*args, **kw):
        print('call %s():' % func.__name__)
        return func(*args, **kw)
    return wrapper

@log   #########  now = log(now)    这一步要这样想  啥都没有反应  只返回一个 wrapper函数   当执行下面 now()的时候才执行 wrapper()
def now(): 
    print('2015-3-25')


now():
2015-3-25
