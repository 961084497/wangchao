package main

import(
	"fmt"
)

// 首先 go的类型自带的有多个  array   slice  map struct interface 等等

//--------------------------------------------------------------------------------------------------------
//  1  首先 array   [10]int         就是array类型  赋值的时候一定需要{}  定义的时候不需要   yes                                  可以 a := xxx{}     可以 var a [10]int a= [10]int{} 后面不赋值一样能用  其实定义的时候[]int已经赋值了  可以这么想

/*func main() {
//	a := [10]int{}
	
	var a [10]int                        //  array   是可以定义空数组的
//	a = [10]int{}
	fmt.Printf("%T\n",a)
	fmt.Println(a)	
}*/

//--------------------------------------------------------------------------------------------------------
//  2  首先 slice   []int           就是slice类型  赋值的时候一定需要{}  定义的时候不需要     yes                                 可以 a := xxx{}      可以 var a []int  a=[]int{}   后面不赋值一样能用  其实定义的时候[]int已经赋值了  可以这么想

/*func main() {
//	a := []string{}
//	var a []int
//	a = []int{}
	fmt.Printf("%T\n",a)
        fmt.Println(a)
}*/

//---------------------------------------------------------------------------------------------------------
//  3  在个就说到  map[int]string   就是map类型    赋值的时候一定需要{} 除了make() 里面是不需要的  他会默认为空   定义的时候不需要   yes

/*func main() {                                                                                                                    可以 a := map(int)int 但是啥都干不了 一般用a :=map[int]int{}  或者 make(map[int]int)
//	a := map[string]string{}   【1】
//	a := make(map[string]string)    //这种是不需要赋值的  【2】
//	var a map[string]string			// map可以这么定义类型 但是啥都干不了 所以一般都会用【1】/【2】
	a["name"] = "wangchao"
	a["old"]  = "30"
	fmt.Println(a)
}*/

//---------------------------------------------------------------------------------------------------------
//  4  然后在个就说到  struct  这个是一个type  不是内置的   定义的时候不需要                                                        可以 a := xxxx{}  可以 var a xxxx也是可以的 都是可以获取到值得   

type wangchao struct {
	name string
	age  int
}

type chaowang struct {
	wang  wangchao 
	class string
}

func main() { 
//	a := wangchao{}  //重点说明 struct
	var a wangchao
	fmt.Println(a)
	var b chaowang
	b = chaowang{wang:wangchao{name:"nimei",age:30},class:"三年二班"}
	fmt.Println(b)
}
