# my global config

global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).


# Alertmanager configuration

alerting:
  alertmanagers:
  - static_configs:
    - targets: ["172.20.0.247:9093"]


# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.

rule_files:
  - "alertmanager_rules.yml"
  - "prometheus_rules.yml"


# A scrape configuration containing exactly one endpoint to scrape:


# Here it's Prometheus itself.

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  #- job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
  #  static_configs:
  #  - targets: ['172.20.0.247:9100']

  - job_name: 'consul-prometheus'
    consul_sd_configs:
      - server:   '172.20.0.247:8500'
        services: []
    relabel_configs:
      #- source_labels: ['__meta_consul_service']
      #  regex:  .*server
      #  action:  keep  
      - source_labels: [__meta_consul_service_metadata_context_path]
        regex: '(.+)'
        target_label: __metrics_path__
        replacement: ${1}
        action: replace  
      - source_labels: [__meta_consul_service_metadata_context_path]
        regex:  .*/.*
        action: keep
      - source_labels: [__address__]
        regex: 192.*
        action: drop
  - job_name: 'node_exporter'
    consul_sd_configs:
      - server:   '172.20.0.247:8500'
        services: []
    relabel_configs:
      #- source_labels: ['__meta_consul_service']
      #  regex:  .*server
      #  action:  keep  
      - source_labels: [__meta_consul_service_metadata_context_path]
        regex: '(.+)'
        target_label: __metrics_path__
        replacement: ${1}
        action: replace
      - source_labels: [__address__]
        regex: .*:9100
        action: keep

