###源码安装 https://www.jianshu.com/p/a682cb1e6cc6
https://grafana.com/grafana/dashboards

https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/exporter       #### 对 prometheus 和 grafana 的介绍

https://www.jianshu.com/p/7e7e0d06709b    grafana select标签选择
---------------------------------------------------

Variable	Definition	
$job	label_values(up,job)
$node	label_values(up{job="$job"},instance)



relabel_configs:      #############这个参数很有用   可以对label标签做重写  区分是那个机器     比如不同的job  但是获取大宋的东西一样  应为他们是一个集群  在集群的任何一台机器都是可以获取到的 所以就造成了冲突
      - source_labels: [__meta_consul_tags]
        regex: ',(.+),(.+),(.+),'
        replacement: ${1}
        target_label: servicetype
      - source_labels: [__meta_consul_tags]
        regex: ',(.+),(.+),(.+),'
        replacement: ${3}
        target_label: env
      - source_labels: [__meta_consul_service]
        regex: 'consul'
        action: drop
      - source_labels: [__address__]   #####  取原始的labels
        regex: (.+):(.+)   #####  正则取区间
        replacement: ${1}   #########  开始替换
        #target_label: __temp_param_target    
        target_label: instance ########  给instance替换掉
      - source_labels: [__temp_param_target]
        target_label: instance
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: hostname

relabel_configs:
      - source_labels: [__meta_consul_service_metadata_context_path]
        regex: '(.+)'
        target_label: __metrics_path__
        replacement: ${1}
        action: replace
      - source_labels: [__meta_consul_service_metadata_context_path]
        regex:  .*/.*
        action: keep
      - source_labels: [__address__]
        regex: 10\.10.*
        replacement: 'pro'
        target_label: env
        action: replace
      - source_labels: [__address__]
        regex: 10\.10\.(142|158|58)\.(161|133|75).*
        replacement: 'uat'
        target_label: env
        action: replace



- source_labels: [__meta_consul_service_metadata_wang]

 curl -X PUT -d '{"meta":{"wang":"chao"},"id": "fuckk","name": "prometheus-nodefuckk","address": "10.10.44.192","port":9894,"tags": ["/aha-account/actuator/prometheus"],"checks": [{"http": "http://10.10.44.192:9894/aha-account/actuator/prometheus","interval": "5s"}]}' http://10.10.129.240:8500/v1/agent/service/register

更多的请参照 https://www.jianshu.com/p/085edb535070
https://blog.csdn.net/aixiaoyang168/article/details/103022342  好的标签relable文章
https://blog.csdn.net/u013616005/article/details/107326169/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
scrape_configs:
  - job_name: qas_discover
    metrics_path: /metrics
    scheme: http
    consul_sd_configs:
      - server: 172.16.8.80:8500     ################  这种是动态的  这个url是consul的地址   直接用到下面的curl一下就好了 就自动注册进去了  也不需要重启prometheus
        scheme: http
        services:
          - node_exporter
          - cadvisor
          - prometheus-node
        tag_separator: ''

curl -X PUT -d '{"id": "zabbix","name": "prometheus-node","address": "172.16.8.59","port":9100,"tags": ["node-exporter"],"checks": [{"http": "http://172.16.8.59:9100/","interval": "5s"}]}' http://172.16.8.80:8500/v1/agent/service/register
curl -X PUT -d '{"id": "habor","name": "prometheus-node","address": "172.16.8.55","port":9100,"tags": ["node-exporter"],"checks": [{"http": "http://172.16.8.55:9100/","interval": "5s"}]}' http://172.16.8.80:8500/v1/agent/service/register
curl -X PUT -d '{"id": "node","name": "harbor","address": "172.16.8.55","port":8080,"tags": [""],"checks": [{"http": "http://172.16.8.55:8080/","interval": "5s"}]}' http://172.16.8.80:8500/v1/agent/service/register


curl -X PUT http://119.3.242.247:32011/v1/agent/service/deregister/exporter     删除的操作
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------   grafana 配置的一些问题  ------------------------------------------------------------------------------------------
jvm_classes_loaded{application="accountserver",} 16465.0  比如这个是prometheus得出的数据 那自定义变量可以用 label_values(application) 来进行筛选了

container_cpu_user_seconds_total{id="/system.slice/rpcbind.service"}   ###  这个 id其实       rate(container_cpu_user_seconds_total{id!=""}[5m]) * 10  下面的 Legend  取像id这样的值就好了 (必须是筛选出来后大家都有的key  或者是那种全局的labels)  可以当成是labels


