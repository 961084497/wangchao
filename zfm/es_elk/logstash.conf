# 配置kafka
input {
	kafka {
		bootstrap_servers => "${LOGSTASH_SERVER_DATA_KAFKA_BROKER}"
        client_id => "client-elkahalog"
		group_id => "elkaha"
		topics => ["log_nginx"]
        codec => json
		auto_offset_reset => "latest"
	    consumer_threads => 3 # number (optional)， default: 1
		decorate_events => true # boolean (optional)， default: false
    }
}


filter {

    if [type] !~ /web\-nginx\-access$/ {
        drop  {}
    }

    if [type] =~ /web\-nginx\-access$/ {
	    grok {
		    patterns_dir => [ "${LOGSTASH_SERVER_CFG}/patterns" ]
	        match => {
	           "message" => "%{NGINXACCESSIPS}"
	       }
	    }

	    date {
	        match => [ "time_local" , "dd/MMM/yyyy:HH:mm:ss Z" ]
            target => "@timestamp"
	   }
        ruby {
            code => "event.set('time',(event.get('@timestamp').time.localtime).strftime('%Y-%m-%d %H:%M:%S'))"
        }

        mutate {
            split => {"time"=>" "}
            add_field => {"[@metadata][format_data]" => "%{[time][0]}"}
        }
        mutate {
            join => {"time"=>" "}
        }

	    kv {
	        source => "request"
	        field_split => "&?"
	        value_split => "="
            include_keys => [ "utm_source","utm_medium", "utm_campaign","utm_term","utm_content"]
	    }
        # 增加cookies配置赢取user_id
        if [cookie_params] {
            kv {
                source => "cookie_params"
                field_split => "&\""
                value_split => "="
                include_keys => ["user_id","gssid","guserid","guniqid"]
            }
        }

	    if [request] {

            mutate {
                split => ["request", "?"]
                add_field => { "url_path" => "%{request[0]}" }
            }
            mutate {
                join => { "request" => "?" }
            }

            if [url_path] =~ /\.(tpl|html|htm|ico|gif|jpg|jpeg|png|bmp|svg|map|js|css)$/ {
	    		drop {}
	        }
            if [url_path] =~ /\/auth\.php/ {
	    		drop {}
	    	}
            if [url_path] =~ /\/\.well\-known\/apple\-app\-site\-association/ {
                drop {}
            }
        }

        if [url_path] {
    	    grok {
    	        match => {
                      "url_path" => ["product\/detail\/product_id\/%{NUMBER:product_id}", "groupbuy\/detail\/product_id\/%{NUMBER:product_id}\/groupbuy_id\/%{NUMBER:group_id}","groupbuy\/detail\/groupbuy_id\/%{NUMBER:group_id}" ]
	            }
	        }
        }

        if [ip_list] =~ /,/ {
      		mutate {
      			split => ["ip_list", ","]
      			add_field => { "http_x_forwarded_for" => "%{ip_list[0]}" }
      		}
        } else {
            mutate {
                add_field => { "http_x_forwarded_for" => "%{ip_list}" }
            }
        }

        useragent {
            source => http_user_agent
            target => "ua"
        }

        if [http_user_agent] =~ /Ahaschool/ {
        	mutate {
        	   replace => { "app_type" => 3}
            }
        }

        if [http_user_agent] =~ /ahaschool/ {
            mutate {
                replace => { "app_type" => 3}
            }
        }

        mutate {
            remove_field => ['ip_list']
            convert      => { "app_type" => "integer" }
        }

        if [http_x_forwarded_for] !~ /\-/ {
            geoip {
                source => "http_x_forwarded_for"
                add_tag => [ "geoip" ]
                database => "${LOGSTASH_SERVER_LIBRARY}/GeoLite2-City.mmdb"
                fields => ["country_name", "country_code2","region_name", "city_name", "region_code", "latitude", "longitude"]
            }
        }
    }
    uuid {
        target    => "uuid"
        overwrite => false
    }
    mutate {
        remove_field =>['kafka']
    }
}

output {
    elasticsearch {
        #hosts => ["elkaha1:9200","elkaha2:9200","elkaha3:9200","elkaha4:9200","elkaha5:9200"]
        hosts => ["${LOGSTASH_SERVER_ES_LOG_HOST1}","${LOGSTASH_SERVER_ES_LOG_HOST2}","${LOGSTASH_SERVER_ES_LOG_HOST3}","${LOGSTASH_SERVER_ES_LOG_HOST4}","${LOGSTASH_SERVER_ES_LOG_HOST5}"]
        index => "logstash-%{type}-%{+YYYY.MM}"
        document_type => "%{type}"
        workers => 1
        template_overwrite => false
    }
    elasticsearch {
        hosts => ["${LOGSTASH_SERVER_ES_APP_HOST1}","${LOGSTASH_SERVER_ES_APP_HOST2}","${LOGSTASH_SERVER_ES_APP_HOST3}"]
        index => "logstash-%{type}-%{+YYYY.MM}"
        document_type => "%{type}"
        workers => 1
        template_overwrite => false
    }
}

