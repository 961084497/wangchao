kubectl get pod --namespace=default 等同于 kubectl get pod

[root@192 ~]# kubectl get namespaces     #########查看所有的namespaces
NAME          STATUS    AGE
default       Active    179d
gitlab        Active    88d
kube-public   Active    179d
kube-system   Active    179d
sirius        Active    78d

kubectl get pod --all-namespaces -o wide ##### 查看所有的namespaces的pod的信息

kubectl get deploy / kubectl get rc  好像是一样的  最好用deploy

kubectl scale --replicas=5 rc mysql  #####如果之前的小于5个副本  可以这样弄  这就是扩容 相反的  下面
kubectl scale --replicas=3 rc mysql  #####之前是5个 现在小于5个 就是缩容
kubectl scale --replicas=5 deploy flask-web -n webapp   #### 如果是deploy创建的 就需要这样写

https://www.jianshu.com/p/ca4de9f10daf


kubeadm token list
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed  's/^ .* //'

master节点需要pull完成的相关镜像
k8s.gcr.io/kube-proxy                            v1.13.3             98db19758ad4        2 weeks ago         80.3MB
k8s.gcr.io/kube-apiserver                        v1.13.3             fe242e556a99        2 weeks ago         181MB
k8s.gcr.io/kube-controller-manager               v1.13.3             0482f6400933        2 weeks ago         146MB
k8s.gcr.io/kube-scheduler                        v1.13.3             3a6f709e97a0        2 weeks ago         79.6MB
k8s.gcr.io/coredns                               1.2.6               f59dcacceff4        3 months ago        40MB
k8s.gcr.io/etcd                                  3.2.24              3cab8e1b9802        5 months ago        220MB
k8s.gcr.io/pause                                 3.1                 da86e6ba6ca1        14 months ago       742kB
quay.io/coreos/flannel                           v0.11.0-amd64       ff281650a721        2 weeks ago         52.6MB

node节点需要pull完成的相关镜像
k8s.gcr.io/kube-proxy               v1.13.3             98db19758ad4        2 weeks ago         80.3MB
k8s.gcr.io/pause                    3.1                 da86e6ba6ca1        14 months ago       742kB
quay.io/coreos/flannel              v0.11.0-amd64       ff281650a721        2 weeks ago         52.6MB


--------------------------  删除一个deploy ----------------------------
kubectl get deploy -n namespace-name   ######先查出来  下面再删除
kubectl delete deploy deploy-name -n namespace-name
kubectl delete -f xxxx.yml

--------------------------  查看ip的一些情况  ------------------------
kubectl get svc -n webapp -o wide
kubectl get pod -n webapp -o wide

#################  有关ip地址的配置  看下面的例子 #####################

webapp        flask-web-bb9b58789-4mtzp            1/1     Running   0          2m55s   10.244.3.15   10-6-2-114   <none>           <none>
webapp        flask-web-bb9b58789-7plp8            1/1     Running   0          2m55s   10.244.3.14   10-6-2-114   <none>           <none>
webapp        flask-web-bb9b58789-9j52d            1/1     Running   0          2m55s   10.244.2.15   10-6-2-113   <none>           <none>
webapp        flask-web-bb9b58789-jf7qn            1/1     Running   0          2m55s   10.244.1.14   10-6-2-112   <none>           <none>
webapp        flask-web-bb9b58789-k45r9            1/1     Running   0          2m55s   10.244.2.14   10-6-2-113   <none>           <none>
webapp        flask-web-bb9b58789-n5pzh            1/1     Running   0          2m55s   10.244.1.15   10-6-2-112   <none>           <none>

NAME        TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)           AGE    SELECTOR
flask-web   NodePort   10.97.103.178   <none>        11110:11112/TCP   3m8s   name=flask-web


port: 11110 //        服务访问端口 cluster-ip地址           此时可以用 curl 10.97.103.178:11110
targetPort: 11111 //  容器里面真正的端口                    此时可以用 curl 10.244.3.15/14等等:11111
nodePort: 11112 //     Node的ip地址                         此时可以用 curl 10.6.2.112:11112


--------------------------------------------  集群搭建好后可以 登录ui界面 -----------------------------------------
kubectl create serviceaccount wangchao -n kube-system
kubectl create clusterrolebinding dashboard-admin --clusterrole=admin --serviceaccount=kube-system:wangchao
kubectl get secret -n kube-system    一般是最后一个
kubectl describe secret  wangchao-token-8qcjn -n kube-system
然后就可以登录了

-----------------------------------------------------------  安装ingress  和 2个项目  ------------------------------------------------------------
1 nginx-ingress-controller 的镜像再百度云盘有   k8s的其他镜像再我的u盘中有
2 相关配置文件再这个git上面有 打包好了  
3 启动脚本就是 kubectl create -f mandatory.yaml;kubectl create -f service-nodeport.yaml;kubectl create -f ingress-flask.yaml/ingress-myapp.yaml;kubectl create -f python-web.yml/deploy-demon.yaml
4 启动后查看ingress的端口   所有的端口都是通过1583端口进去的
        [root@10-6-2-111 ingress]# kubectl get service -n ingress-nginx
	NAME            TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                     AGE
        ingress-nginx   NodePort   10.96.182.18   <none>        80:1583/TCP,443:21617/TCP   84m
5 查看刚才2个ingress服务的域名和端口
        [root@10-6-2-111 ingress]# kubectl get ingress -n default
        NAME            HOSTS              ADDRESS   PORTS   AGE
        ingress-flask   flask.magedu.com             80      14m
        ingress-myapp   myapp.magedu.com             80      14m
6 还有外网端口ok了 内网通过cluster-ip调用
        [root@10-6-2-111 ingress]# kubectl get service
	NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE
	flask-web    ClusterIP   10.98.252.186    <none>        80/TCP    87m
	kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP   4d20h
	myapp        ClusterIP   10.110.139.173   <none>        80/TCP    82m
7 python-web.yml/deploy-demon.yaml 和 ingress-flask.yaml/ingress-myapp.yaml  这四个文件  22分组都是一个namespaces就可以了   就相当于 我的flask项目是namespaces webapp  ingress-项目.yaml也是同样的namespaces就可以了 
