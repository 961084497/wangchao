---
- name: "下载配置中心.env文件到{{ ans_jenkins_workspace }}/{{ ans_project_name }}/"
  script: "/data/jenkins/git_data/apollo.py {{ department }} {{ env }}  {{ AppId }} {{ ans_project_name }} {{ ans_jenkins_workspace }}/{{ ans_project_name }}/.env"
  delegate_to: 127.0.0.1
  run_once: true

- name: "{{ ans_project_name }} generate or update the node_modules dependency package"
  #shell: . /etc/profile;/usr/local/node-v10.14.1-linux-x64/bin/npm install
  shell: . /etc/profile;/usr/local/node-v12.4.0-linux-x64/bin/npm install
  args: 
    chdir: "{{ ans_jenkins_workspace }}/{{ ans_project_name }}"
  delegate_to: 127.0.0.1
  run_once: true
  
- name: "{{ ans_project_name }} package generation {{ srcdir_name }} directory"
  #shell: . /etc/profile;/usr/local/node-v10.14.1-linux-x64/bin/npm run prod
  shell: . /etc/profile;/usr/local/node-v12.4.0-linux-x64/bin/npm run prod
  args:
    chdir: "{{ ans_jenkins_workspace }}/{{ ans_project_name }}"
  delegate_to: 127.0.0.1  
  run_once: true

- name: "create /opt/hjm/{{ ans_project_name }}/{dist,release} dir"
  shell: mkdir -pv /opt/hjm/{{ ans_project_name }}/{dist,release}
  become: yes

- name: "change /opt/hjm/{{ ans_project_name }} owner group"
  file: 
    path: "/opt/hjm/{{ ans_project_name }}"
    recurse: yes
    owner: hjmrunning
    group: hjmrunning
  become: yes

- name: "backup dist dir"
  shell: tar -zcf ./release/dist.`date +%Y%m%d%H%M`.tar.gz dist/
  args:
    chdir: "/opt/hjm/{{ ans_project_name }}"

- name: "copy {{ ans_project_name }} .env config file {{ ansible_hostname }}"
  copy: 
    src: "{{ ans_jenkins_workspace }}/{{ ans_project_name }}/.env"
    dest: "/opt/hjm/{{ ans_project_name }}/"
  
- name: "Synchronize files in the dist directory to the remote {{ ansible_hostname }}"
  synchronize:
    src: "{{ ans_jenkins_workspace }}/{{ ans_project_name }}/{{ srcdir_name }}/"
    dest: "/opt/hjm/{{ ans_project_name }}/dist/"
    recursive: yes
    delete: yes
    archive: yes
    compress: yes

- name: "是否触发预热功能"
  shell: . /etc/profile;/bin/bash /data/jenkins/git_data/QIANDUAN-PHP/Hot_cdn.sh
  when: ans_pro_name == "aha-earth-h5"
  run_once: true 
  delegate_to: 127.0.0.1
  register: cdn_preheat

- debug: var=cdn_preheat.stdout
  ignore_errors: True

- name: "Clean up releases on {{ ansible_hostname }}"
  shell: ls -1dt /opt/hjm/{{ ans_project_name }}/release/* | tail -n +{{ ans_keep_releases | int + 1 }} | xargs rm -rf
  when: ans_keep_releases > 0
... 
